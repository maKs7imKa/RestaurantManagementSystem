<!DOCTYPE html>
<html lang="uk">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Управління запасами</title>
    <link rel="stylesheet" href="/admin_inventory.css">
    <style>

    </style>
  </head>
  <body>
    <h2>Управління запасами</h2>
    <a href="/admin">Назад до панелі </a>
  
    <!-- Форма для оновлення запасів -->
    <form action="/admin/inventory/update" method="POST">
      <table class="inventory-table">
          <thead>
              <tr>
                  <th>Продукт</th>
                  <th>Мін</th>
                  <th>Макс</th>
                  <th>Поточний запас</th>
                  <th>(%)</th>
                  <th>Кількість</th>
                  <th>Дії</th>
              </tr>
          </thead>
          <tbody>
              <% inventory.forEach(item => { 
                  const stockPercentage = Math.round((item.stock / item.maxStock) * 100); // Обчислюємо відсоток запасу
              %>
              <tr class="<%= item.stock < item.minStock ? 'low-stock' : '' %>">
                  <td><%= item.name %></td>
                  <td><%= item.minStock %></td>
                  <td><%= item.maxStock %></td>
                  <td><%= item.stock %></td>
                  <td><%= stockPercentage %>%</td> <!-- Відображаємо відсоток запасу -->
                  <td>
                      <input type="number" name="restock[<%= item.name %>]" min="0" placeholder="Додати одиниці">
                  </td>
                  <td>
                      <button type="button" class="fill-to-max" data-id="<%= item.name %>" data-maxstock="<%= item.maxStock %>" data-stock="<%= item.stock %>">
                          Розрахувати
                      </button>
                  </td>
              </tr>
              <% }); %>
          </tbody>
      </table>

      <!-- Додаємо кнопки під таблицею -->
      <div class="table-actions">
          <button type="button" id="fillAllToMax">Заповнити всі до максимуму</button>
          <button type="button" id="addAllToInvoice">Додати всі до накладної</button>
      </div>
  </form>

  <!-- Таблиця накладної -->
  <form action="/admin/inventory/process" method="POST">
      <table class="invoice-table" id="invoiceTableWrapper" style="display: none;">
          <thead>
              <tr>
                  <th>Продукт</th>
                  <th>Кількість</th>
                  <th>Дії</th>
              </tr>
          </thead>
          <tbody id="invoiceTable">
              <!-- Динамічно додані рядки -->
          </tbody>
      </table>
      <button type="submit" id="processInvoiceButton" style="display: none;">Обробити накладну</button>
  </form>

  <h2>Історія накладних</h2>

 <!-- Форма для пошуку по даті -->
 <div style="margin-bottom: 20px;">
    <label for="searchDate">Пошук за датою:</label>
    <input type="date" id="searchDate" />
    <button type="button" id="searchButton">Пошук</button>
</div>

    <table class="invoice-history-table">
        <thead>
            <tr>
                <th>Назва продукту</th>
                <th>Кількість</th>
            </tr>
        </thead>
        <tbody>
            <% 
            let currentTimeGroup = null; 
            invoices.forEach(invoice => { 
                const invoiceDate = new Date(invoice.processedAt).toLocaleDateString(); // Форматуємо тільки дату
                const invoiceTime = new Date(invoice.processedAt).toLocaleString(); // Форматуємо дату і час
                if (currentTimeGroup !== invoiceTime) { 
                    currentTimeGroup = invoiceTime; 
            %>
                <!-- Відображаємо заголовок групи -->
                <tr id="group-<%= invoiceDate.replace(/[^a-zA-Z0-9]/g, '-') %>">
                    <td colspan="2" style="font-weight: bold; background-color: #f0f0f0;">
                        Оброблено: <%= currentTimeGroup %>
                    </td>
                </tr>
            <% 
                } 
            %>
                <!-- Відображаємо рядок накладної -->
                <tr>
                    <td><%= invoice.productName %></td>
                    <td><%= invoice.amount %></td>
                </tr>
            <% }); %>
        </tbody>
    </table>

  <script>
      // Заповнення до максимального запасу
      document.querySelectorAll('.fill-to-max').forEach(button => {
          button.addEventListener('click', () => {
              const id = button.getAttribute('data-id');
              const maxStock = parseInt(button.getAttribute('data-maxstock'), 10);
              const currentStock = parseInt(button.getAttribute('data-stock'), 10);
              const input = document.querySelector(`input[name="restock[${id}]"]`);
              if (input) {
                  input.value = maxStock - currentStock;
                  if (input.value < 0) {
                      input.value = 0; // Не дозволяємо негативні значення
                  }
              }
          });
      });

      // Додавання до накладної
      document.querySelectorAll('.add-to-invoice').forEach(button => {
          button.addEventListener('click', () => {
              const id = button.getAttribute('data-id');
              const name = button.getAttribute('data-name');

              const invoiceTable = document.getElementById('invoiceTable');
              const existingRow = document.querySelector(`#invoiceTable tr[data-id="${id}"]`);
              if (existingRow) {
                  alert('This product is already in the invoice.');
                  return;
              }

              const newRow = document.createElement('tr');
              newRow.setAttribute('data-id', id);
              newRow.innerHTML = `
                  <td>${name}</td>
                  <td><input type="number" name="invoice[${name}]" value="1" min="1"></td>
                  <td><button type="button" class="remove-from-invoice">Remove</button></td>
              `;
              invoiceTable.appendChild(newRow);

              // Видалення з накладної
              newRow.querySelector('.remove-from-invoice').addEventListener('click', () => {
                  newRow.remove();
                  toggleInvoiceTableVisibility(); // Оновлюємо видимість таблиці
              });

              toggleInvoiceTableVisibility(); // Оновлюємо видимість таблиці
          });
      });

      // Заповнення всіх інпутів до максимального запасу
      document.getElementById('fillAllToMax').addEventListener('click', () => {
          document.querySelectorAll('.fill-to-max').forEach(button => {
              const id = button.getAttribute('data-id');
              const maxStock = parseInt(button.getAttribute('data-maxstock'), 10);
              const currentStock = parseInt(button.getAttribute('data-stock'), 10);
              const input = document.querySelector(`input[name="restock[${id}]"]`);
              if (input) {
                  input.value = maxStock - currentStock;
                  if (input.value < 0) {
                      input.value = 0; // Не дозволяємо негативні значення
                  }
              }
          });
      });

      // Додавання всіх заповнених інпутів до накладної
      document.getElementById('addAllToInvoice').addEventListener('click', () => {
          const invoiceTable = document.getElementById('invoiceTable');
          document.querySelectorAll('input[name^="restock"]').forEach(input => {
              const value = parseInt(input.value, 10);
              if (value > 0) {
                  const name = input.name.match(/restock\[(.+)\]/)[1];
                  const existingRow = document.querySelector(`#invoiceTable tr[data-id="${name}"]`);
                  if (existingRow) {
                      alert(`Product "${name}" is already in the invoice.`);
                      return;
                  }

                  const newRow = document.createElement('tr');
                  newRow.setAttribute('data-id', name);
                  newRow.innerHTML = `
                      <td>${name}</td>
                      <td><input type="number" name="invoice[${name}]" value="${value}" min="1"></td>
                      <td><button type="button" class="remove-from-invoice">Remove</button></td>
                  `;
                  invoiceTable.appendChild(newRow);

                  // Видалення з накладної
                  newRow.querySelector('.remove-from-invoice').addEventListener('click', () => {
                      newRow.remove();
                      toggleInvoiceTableVisibility(); // Оновлюємо видимість таблиці
                  });
              }
          });
          toggleInvoiceTableVisibility(); // Оновлюємо видимість таблиці
      });

         // Пошук по даті
    document.getElementById('searchButton').addEventListener('click', () => {
        const searchDate = document.getElementById('searchDate').value;
        if (!searchDate) {
            alert('Please select a date.');
            return;
        }

        // Форматуємо дату для пошуку
        const formattedDate = new Date(searchDate).toLocaleDateString();
        const targetRow = document.querySelector(`#group-${formattedDate.replace(/[^a-zA-Z0-9]/g, '-')}`);

        if (targetRow) {
            // Скролимо до відповідного заголовка групи
            targetRow.scrollIntoView({ behavior: 'smooth', block: 'center' });
            targetRow.style.backgroundColor = '#ffeb3b'; // Виділяємо знайдений рядок
            setTimeout(() => {
                targetRow.style.backgroundColor = '#f0f0f0'; // Повертаємо початковий колір
            }, 2000);
        } else {
            alert('No invoices found for the selected date.');
        }
    });

    // Функція для перевірки наявності рядків у таблиці
    function toggleInvoiceTableVisibility() {
        const invoiceTable = document.getElementById('invoiceTable');
        const tableWrapper = document.getElementById('invoiceTableWrapper');
        const processButton = document.getElementById('processInvoiceButton');

        if (invoiceTable.children.length > 0) {
            tableWrapper.style.display = 'table'; // Показуємо таблицю
            processButton.style.display = 'block'; // Показуємо кнопку
        } else {
            tableWrapper.style.display = 'none'; // Ховаємо таблицю
            processButton.style.display = 'none'; // Ховаємо кнопку
        }
    }

    // Викликаємо функцію при завантаженні сторінки
    toggleInvoiceTableVisibility();
  </script>
  </body>
  </html>